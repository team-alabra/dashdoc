name: Dev Deployment

on:
  push:
    branches: [ "test-eb" ]

env:
  DOTNET_VERSION: '8.x'
  PROJECT_ROOT: 'Dashdoc.API.Server'

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Dashdoc.API

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Restore dependencies
      run: dotnet restore .
    - name: Build 
      run: dotnet build ${{ env.PROJECT_ROOT }}/Dashdoc.API.Server.csproj --configuration Release
    - name: Pack
      run: dotnet publish ${{ env.PROJECT_ROOT }}/Dashdoc.API.Server.csproj -c Release -o ${{ env.PROJECT_ROOT }}/publish
    - name: Generate deployment package
      run: zip -r project.zip ${{ env.PROJECT_ROOT }}/publish -x '*.git*'
    
    - name: Upload .NET to artifact
      uses: actions/upload-artifact@v4
      with:
        name: project
        path: Dashdoc.API/${{ env.PROJECT_ROOT }}
    
  deploy:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4.1.7
      with:
          name: project

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.ELASTIC_BEANSTALK_NAME }}
        environment_name: ${{ secrets.ELASTIC_BEANSTALK_ENV_NAME }}
        version_label: ${{ github.SHA }}
        region: ${{ secrets.AWS_REGION }}
        deployment_package: deploy.zip